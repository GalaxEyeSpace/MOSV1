# Generated by Django 5.1.5 on 2025-02-18 19:57

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('telemetry', '0002_position_power_storage_velocity_delete_telemetrydata'),
    ]

    operations = [
        migrations.CreateModel(
            name='Adcsattitudeangle177',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roll_angle', models.TextField(blank=True, db_column='Roll_Angle', null=True)),
                ('pitch_angle', models.TextField(blank=True, db_column='Pitch_Angle', null=True)),
                ('yaw_angle', models.TextField(blank=True, db_column='Yaw_Angle', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsAttitudeAngle_177',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdcsControlMode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestep', models.DateTimeField(blank=True, null=True)),
                ('control_mode', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'adcs_control_mode',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetangularcovariance193',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x_angular_rate_covar', models.TextField(blank=True, db_column='X_angular_rate_covar', null=True)),
                ('y_angular_rate_covar', models.TextField(blank=True, db_column='Y_angular_rate_covar', null=True)),
                ('z_angular_rate_covar', models.TextField(blank=True, db_column='Z_angular_rate_covar', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetAngularCovariance_193',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetconsumedcurrentmeasure159',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cur_val_3_3v', models.TextField(blank=True, db_column='Cur_val_3_3v', null=True)),
                ('cur_val_5v', models.TextField(blank=True, db_column='Cur_val_5v', null=True)),
                ('vbat', models.TextField(blank=True, db_column='Vbat', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetConsumedCurrentMeasure_159',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetconsumedcurrentmeasure206',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cur_val_3_3v', models.TextField(blank=True, db_column='Cur_val_3_3v', null=True)),
                ('cur_val_5v', models.TextField(blank=True, db_column='Cur_val_5v', null=True)),
                ('vbat', models.TextField(blank=True, db_column='Vbat', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetConsumedCurrentMeasure_206',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetestimatedgyromeasurement189',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('est_x_gyro_bias', models.TextField(blank=True, db_column='Est_x_gyro_bias', null=True)),
                ('est_y_gyro_bias', models.TextField(blank=True, db_column='Est_y_gyro_bias', null=True)),
                ('est_z_gyro_bias', models.TextField(blank=True, db_column='Est_z_gyro_bias', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetEstimatedGyroMeasurement_189',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetestimatedinnovation190',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x_innovation_vector', models.TextField(blank=True, db_column='X_innovation_vector', null=True)),
                ('y_innovation_vector', models.TextField(blank=True, db_column='Y_innovation_vector', null=True)),
                ('z_innovation_vector', models.TextField(blank=True, db_column='Z_innovation_vector', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetEstimatedInnovation_190',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetestimationquaternion185',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('star_tracker_est_attitude_q1', models.TextField(blank=True, db_column='Star_tracker_est_attitude_q1', null=True)),
                ('star_tracker_est_attitude_q2', models.TextField(blank=True, db_column='Star_tracker_est_attitude_q2', null=True)),
                ('star_tracker_est_attitude_q3', models.TextField(blank=True, db_column='Star_tracker_est_attitude_q3', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetEstimationQuaternion_185',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetestimationrate184',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('est_x_angular_rate', models.TextField(blank=True, db_column='Est_x_angular_rate', null=True)),
                ('est_y_angular_rate', models.TextField(blank=True, db_column='Est_y_angular_rate', null=True)),
                ('est_z_angular_rate', models.TextField(blank=True, db_column='Est_z_angular_rate', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetEstimationRate_184',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetfineestimatedangularrates222',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estimated_x_angular_rate', models.TextField(blank=True, db_column='Estimated_X_angular_rate', null=True)),
                ('estimated_y_angular_rate', models.TextField(blank=True, db_column='Estimated_Y_angular_rate', null=True)),
                ('estimated_z_angular_rate', models.TextField(blank=True, db_column='Estimated_Z_angular_rate', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetFineEstimatedAngularRates_222',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetmagneticfieldvec133',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x_axis_vec', models.TextField(blank=True, db_column='X_axis_vec', null=True)),
                ('y_axis_vec', models.TextField(blank=True, db_column='Y_axis_vec', null=True)),
                ('z_axis_vec', models.TextField(blank=True, db_column='Z_axis_vec', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetMagneticFieldVec_133',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetmeasurement223',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('magnetic_field_x', models.TextField(blank=True, db_column='Magnetic_Field_X', null=True)),
                ('magnetic_field_y', models.TextField(blank=True, db_column='Magnetic_Field_Y', null=True)),
                ('magnetic_field_z', models.TextField(blank=True, db_column='Magnetic_Field_Z', null=True)),
                ('coarse_sun_x', models.TextField(blank=True, db_column='Coarse_Sun_X', null=True)),
                ('coarse_sun_y', models.TextField(blank=True, db_column='Coarse_Sun_Y', null=True)),
                ('coarse_sun_z', models.TextField(blank=True, db_column='Coarse_Sun_Z', null=True)),
                ('sun_x', models.TextField(blank=True, db_column='Sun_X', null=True)),
                ('sun_y', models.TextField(blank=True, db_column='Sun_Y', null=True)),
                ('sun_z', models.TextField(blank=True, db_column='Sun_Z', null=True)),
                ('nadir_x', models.TextField(blank=True, db_column='Nadir_X', null=True)),
                ('nadir_y', models.TextField(blank=True, db_column='Nadir_Y', null=True)),
                ('nadir_z', models.TextField(blank=True, db_column='Nadir_Z', null=True)),
                ('x_angular_rate', models.TextField(blank=True, db_column='X_angular_rate', null=True)),
                ('y_angular_rate', models.TextField(blank=True, db_column='Y_angular_rate', null=True)),
                ('z_angular_rate', models.TextField(blank=True, db_column='Z_angular_rate', null=True)),
                ('x_wheel_speed', models.TextField(blank=True, db_column='X_wheel_speed', null=True)),
                ('y_wheel_speed', models.TextField(blank=True, db_column='Y_wheel_speed', null=True)),
                ('z_wheel_speed', models.TextField(blank=True, db_column='Z_wheel_speed', null=True)),
                ('star_body_x', models.TextField(blank=True, db_column='Star_Body_X', null=True)),
                ('star_body_y', models.TextField(blank=True, db_column='Star_Body_Y', null=True)),
                ('star_body_z', models.TextField(blank=True, db_column='Star_Body_Z', null=True)),
                ('star_orbit_x', models.TextField(blank=True, db_column='Star_Orbit_X', null=True)),
                ('star_orbit_y', models.TextField(blank=True, db_column='Star_Orbit_Y', null=True)),
                ('star_orbit_z', models.TextField(blank=True, db_column='Star_Orbit_Z', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetMeasurement_223',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetnadirvec136',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x_axis_nadir_vec', models.TextField(blank=True, db_column='X_axis_nadir_vec', null=True)),
                ('y_axis_nadir_vec', models.TextField(blank=True, db_column='Y_axis_nadir_vec', null=True)),
                ('z_axis_nadir_vec', models.TextField(blank=True, db_column='Z_axis_nadir_vec', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetNadirVec_136',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetpositioneci181',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x_eci', models.TextField(blank=True, db_column='X_eci', null=True)),
                ('y_eci', models.TextField(blank=True, db_column='Y_eci', null=True)),
                ('z_eci', models.TextField(blank=True, db_column='Z_eci', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetPositionECI_181',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetpositionllh183',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geocentric_long', models.TextField(blank=True, db_column='Geocentric_long', null=True)),
                ('geocentric_lat', models.TextField(blank=True, db_column='Geocentric_lat', null=True)),
                ('geocentric_altitude', models.TextField(blank=True, db_column='Geocentric_altitude', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetPositionLLH_183',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetpowerandtemperaturemeasurement163',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_measure', models.TextField(blank=True, db_column='Current_measure', null=True)),
                ('sensor_current_measure', models.TextField(blank=True, db_column='Sensor_current_measure', null=True)),
                ('reaction_wheel_current_measure', models.TextField(blank=True, db_column='Reaction_wheel_current_measure', null=True)),
                ('temperature', models.TextField(blank=True, db_column='Temperature', null=True)),
                ('star_tracker_cur', models.TextField(blank=True, db_column='Star_Tracker_cur', null=True)),
                ('magnetometer_cur', models.TextField(blank=True, db_column='Magnetometer_cur', null=True)),
                ('star_tracker_mcu_temp', models.TextField(blank=True, db_column='Star_tracker_MCU_temp', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetPowerAndTemperatureMeasurement_163',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetquaternioncovariance192',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quaternion_covar_q1', models.TextField(blank=True, db_column='Quaternion_covar_Q1', null=True)),
                ('quaternion_covar_q2', models.TextField(blank=True, db_column='Quaternion_covar_Q2', null=True)),
                ('quaternion_covar_q3', models.TextField(blank=True, db_column='Quaternion_covar_Q3', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetQuaternionCovariance_192',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetquaternionerrorvector191',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quaternion_err_q1', models.TextField(blank=True, db_column='Quaternion_err_Q1', null=True)),
                ('quaternion_err_q2', models.TextField(blank=True, db_column='Quaternion_err_Q2', null=True)),
                ('quaternion_err_q3', models.TextField(blank=True, db_column='Quaternion_err_Q3', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetQuaternionErrorVector_191',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetratesensorvec137',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x_rate', models.TextField(blank=True, db_column='X_rate', null=True)),
                ('y_rate', models.TextField(blank=True, db_column='Y_rate', null=True)),
                ('z_rate', models.TextField(blank=True, db_column='Z_rate', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetRateSensorVec_137',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetrawfinesunsensormeasure141',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fss_raw_x_angle', models.TextField(blank=True, db_column='Fss_raw_x_angle', null=True)),
                ('fss_raw_y_angle', models.TextField(blank=True, db_column='Fss_raw_y_angle', null=True)),
                ('fss_capture_status', models.TextField(blank=True, db_column='Fss_capture_status', null=True)),
                ('fss_detection_result', models.TextField(blank=True, db_column='Fss_detection_result', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetRawFineSunSensorMeasure_141',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetrawgpsmeasurement152',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gps_solution_status', models.TextField(blank=True, db_column='Gps_solution_status', null=True)),
                ('num_tracked_gps_sat', models.TextField(blank=True, db_column='Num_tracked_gps_sat', null=True)),
                ('num_used_gps_sat', models.TextField(blank=True, db_column='Num_used_gps_sat', null=True)),
                ('xyz_log_counter', models.TextField(blank=True, db_column='XYZ_log_counter', null=True)),
                ('range_log_counter', models.TextField(blank=True, db_column='Range_log_counter', null=True)),
                ('log_setup_response', models.TextField(blank=True, db_column='Log_setup_response', null=True)),
                ('gps_ref_week', models.TextField(blank=True, db_column='Gps_ref_week', null=True)),
                ('gps_time_ms', models.TextField(blank=True, db_column='Gps_time_ms', null=True)),
                ('x_ecef', models.TextField(blank=True, db_column='X_ECEF', null=True)),
                ('x_velocity', models.TextField(blank=True, db_column='X_velocity', null=True)),
                ('y_ecef', models.TextField(blank=True, db_column='Y_ECEF', null=True)),
                ('y_velocity', models.TextField(blank=True, db_column='Y_velocity', null=True)),
                ('z_ecef', models.TextField(blank=True, db_column='Z_ECEF', null=True)),
                ('z_velocity', models.TextField(blank=True, db_column='Z_velocity', null=True)),
                ('x_pos_standard_dev', models.TextField(blank=True, db_column='X_pos_standard_dev', null=True)),
                ('y_pos_standard_dev', models.TextField(blank=True, db_column='Y_pos_standard_dev', null=True)),
                ('z_pos_standard_dev', models.TextField(blank=True, db_column='Z_pos_standard_dev', null=True)),
                ('x_vel_standard_dev', models.TextField(blank=True, db_column='X_vel_standard_dev', null=True)),
                ('y_vel_standard_dev', models.TextField(blank=True, db_column='Y_vel_standard_dev', null=True)),
                ('z_vel_standard_dev', models.TextField(blank=True, db_column='Z_vel_standard_dev', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetRawGPSMeasurement_152',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetrawmagnetometermeasure142',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raw_mgmtr_x_msr', models.TextField(blank=True, db_column='Raw_mgmtr_x_msr', null=True)),
                ('raw_mgmtr_y_msr', models.TextField(blank=True, db_column='Raw_mgmtr_y_msr', null=True)),
                ('raw_mgmtr_z_msr', models.TextField(blank=True, db_column='Raw_mgmtr_z_msr', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetRawMagnetometerMeasure_142',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetrawmagnetometermeasure155',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raw_mgmtr_x_msr', models.TextField(blank=True, db_column='Raw_mgmtr_x_msr', null=True)),
                ('raw_mgmtr_y_msr', models.TextField(blank=True, db_column='Raw_mgmtr_y_msr', null=True)),
                ('raw_mgmtr_z_msr', models.TextField(blank=True, db_column='Raw_mgmtr_z_msr', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetRawMagnetometerMeasure_155',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetrawsensormeasure151',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nadir_sen_raw_x_angle', models.TextField(blank=True, db_column='Nadir_sen_raw_x_angle', null=True)),
                ('nadir_sen_raw_y_angle', models.TextField(blank=True, db_column='Nadir_sen_raw_y_angle', null=True)),
                ('nadir_sensor_capture_status', models.TextField(blank=True, db_column='Nadir_sensor_capture_status', null=True)),
                ('nadir_sensor_detection_result', models.TextField(blank=True, db_column='Nadir_sensor_detection_result', null=True)),
                ('fss_raw_x_angle', models.TextField(blank=True, db_column='Fss_raw_x_angle', null=True)),
                ('fss_raw_y_angle', models.TextField(blank=True, db_column='Fss_raw_y_angle', null=True)),
                ('fss_capture_status', models.TextField(blank=True, db_column='Fss_capture_status', null=True)),
                ('fss_detection_result', models.TextField(blank=True, db_column='Fss_detection_result', null=True)),
                ('css_raw_measurement', models.TextField(blank=True, db_column='Css_raw_measurement', null=True)),
                ('raw_magnetometer_x_measure', models.TextField(blank=True, db_column='Raw_magnetometer_x_measure', null=True)),
                ('raw_magnetometer_y_measure', models.TextField(blank=True, db_column='Raw_magnetometer_y_measure', null=True)),
                ('raw_magnetometer_z_measure', models.TextField(blank=True, db_column='Raw_magnetometer_z_measure', null=True)),
                ('x_angular_rate', models.TextField(blank=True, db_column='X_angular_rate', null=True)),
                ('y_angular_rate', models.TextField(blank=True, db_column='Y_angular_rate', null=True)),
                ('z_angular_rate', models.TextField(blank=True, db_column='Z_angular_rate', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetRawSensorMeasure_151',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetrawsensorrates156',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x_raw_sensor_rate', models.TextField(blank=True, db_column='X_raw_sensor_rate', null=True)),
                ('y_raw_senson_rate', models.TextField(blank=True, db_column='Y_raw_senson_rate', null=True)),
                ('z_raw_sensor_rate', models.TextField(blank=True, db_column='Z_raw_sensor_rate', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetRawSensorRates_156',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetrawstartrackermeasure153',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_stars_detected', models.TextField(blank=True, db_column='Num_stars_detected', null=True)),
                ('star_image_noise', models.TextField(blank=True, db_column='Star_image_noise', null=True)),
                ('invalid_star', models.TextField(blank=True, db_column='Invalid_star', null=True)),
                ('num_of_star_identified', models.TextField(blank=True, db_column='Num_of_star_identified', null=True)),
                ('identification_mode', models.TextField(blank=True, db_column='Identification_mode', null=True)),
                ('img_dark_value', models.TextField(blank=True, db_column='Img_dark_value', null=True)),
                ('img_capture_success', models.TextField(blank=True, db_column='Img_capture_success', null=True)),
                ('detection_success', models.TextField(blank=True, db_column='Detection_success', null=True)),
                ('identification_success', models.TextField(blank=True, db_column='Identification_success', null=True)),
                ('attitude_success', models.TextField(blank=True, db_column='Attitude_success', null=True)),
                ('processing_time_error', models.TextField(blank=True, db_column='Processing_time_error', null=True)),
                ('tracking_module_enabled', models.TextField(blank=True, db_column='Tracking_module_enabled', null=True)),
                ('predictionenabled', models.TextField(blank=True, db_column='PredictionEnabled', null=True)),
                ('comms_error', models.TextField(blank=True, db_column='Comms_error', null=True)),
                ('star1_confidence', models.TextField(blank=True, db_column='Star1_confidence', null=True)),
                ('star2_confidence', models.TextField(blank=True, db_column='Star2_confidence', null=True)),
                ('star3_confidence', models.TextField(blank=True, db_column='Star3_confidence', null=True)),
                ('instr_mag_star1', models.TextField(blank=True, db_column='Instr_Mag_star1', null=True)),
                ('instr_mag_star2', models.TextField(blank=True, db_column='Instr_Mag_star2', null=True)),
                ('instr_mag_star3', models.TextField(blank=True, db_column='Instr_Mag_star3', null=True)),
                ('capture', models.TextField(blank=True, db_column='Capture', null=True)),
                ('detection', models.TextField(blank=True, db_column='Detection', null=True)),
                ('identification', models.TextField(blank=True, db_column='Identification', null=True)),
                ('est_rate_x', models.TextField(blank=True, db_column='Est_rate_x', null=True)),
                ('est_rate_y', models.TextField(blank=True, db_column='Est_rate_y', null=True)),
                ('est_rate_z', models.TextField(blank=True, db_column='Est_rate_z', null=True)),
                ('est_attitude_q1', models.TextField(blank=True, db_column='Est_attitude_q1', null=True)),
                ('est_attitude_q2', models.TextField(blank=True, db_column='Est_attitude_q2', null=True)),
                ('est_attitude_q3', models.TextField(blank=True, db_column='Est_attitude_q3', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetRawStarTrackerMeasure_153',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetrawstartrackermeasure154',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_stars_detected', models.TextField(blank=True, db_column='Num_stars_detected', null=True)),
                ('star_image_noise', models.TextField(blank=True, db_column='Star_image_noise', null=True)),
                ('invalid_star', models.TextField(blank=True, db_column='Invalid_star', null=True)),
                ('num_of_star_identified', models.TextField(blank=True, db_column='Num_of_star_identified', null=True)),
                ('identification_mode', models.TextField(blank=True, db_column='Identification_mode', null=True)),
                ('img_dark_value', models.TextField(blank=True, db_column='Img_dark_value', null=True)),
                ('img_capture_success', models.TextField(blank=True, db_column='Img_capture_success', null=True)),
                ('detection_success', models.TextField(blank=True, db_column='Detection_success', null=True)),
                ('identification_success', models.TextField(blank=True, db_column='Identification_success', null=True)),
                ('attitude_success', models.TextField(blank=True, db_column='Attitude_success', null=True)),
                ('processing_time_error', models.TextField(blank=True, db_column='Processing_time_error', null=True)),
                ('tracking_module_enabled', models.TextField(blank=True, db_column='Tracking_module_enabled', null=True)),
                ('predictionenabled', models.TextField(blank=True, db_column='PredictionEnabled', null=True)),
                ('comms_error', models.TextField(blank=True, db_column='Comms_error', null=True)),
                ('star1_confidence', models.TextField(blank=True, db_column='Star1_confidence', null=True)),
                ('star2_confidence', models.TextField(blank=True, db_column='Star2_confidence', null=True)),
                ('star3_confidence', models.TextField(blank=True, db_column='Star3_confidence', null=True)),
                ('instr_mag_star1', models.TextField(blank=True, db_column='Instr_Mag_star1', null=True)),
                ('instr_mag_star2', models.TextField(blank=True, db_column='Instr_Mag_star2', null=True)),
                ('instr_mag_star3', models.TextField(blank=True, db_column='Instr_Mag_star3', null=True)),
                ('capture', models.TextField(blank=True, db_column='Capture', null=True)),
                ('detection', models.TextField(blank=True, db_column='Detection', null=True)),
                ('identification', models.TextField(blank=True, db_column='Identification', null=True)),
                ('est_rate_x', models.TextField(blank=True, db_column='Est_rate_x', null=True)),
                ('est_rate_y', models.TextField(blank=True, db_column='Est_rate_y', null=True)),
                ('est_rate_z', models.TextField(blank=True, db_column='Est_rate_z', null=True)),
                ('est_attitude_q1', models.TextField(blank=True, db_column='Est_attitude_q1', null=True)),
                ('est_attitude_q2', models.TextField(blank=True, db_column='Est_attitude_q2', null=True)),
                ('est_attitude_q3', models.TextField(blank=True, db_column='Est_attitude_q3', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetRawStarTrackerMeasure_154',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetrwcommandedspeed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x_wheel_speed', models.TextField(blank=True, db_column='X_wheel_speed', null=True)),
                ('y_wheel_speed', models.TextField(blank=True, db_column='Y_wheel_speed', null=True)),
                ('z_wheel_speed', models.TextField(blank=True, db_column='Z_wheel_speed', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetRwCommandedSpeed',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetrwcurrent160',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rw_cur1', models.TextField(blank=True, db_column='Rw_cur1', null=True)),
                ('rw_cur2', models.TextField(blank=True, db_column='Rw_cur2', null=True)),
                ('rw_cur3', models.TextField(blank=True, db_column='Rw_cur3', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetRwCurrent_160',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetrwmeasuredspeed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rw1', models.TextField(blank=True, db_column='Rw1', null=True)),
                ('rw2', models.TextField(blank=True, db_column='Rw2', null=True)),
                ('rw3', models.TextField(blank=True, db_column='Rw3', null=True)),
                ('rw4', models.TextField(blank=True, db_column='Rw4', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetRwMeasuredSpeed',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetsenscurrent158',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nadir_sensor_cur_msr', models.TextField(blank=True, db_column='Nadir_sensor_cur_msr', null=True)),
                ('fine_sun_sensor_cur_msr', models.TextField(blank=True, db_column='Fine_sun_sensor_cur_msr', null=True)),
                ('nadir_sram_cur', models.TextField(blank=True, db_column='Nadir_SRAM_cur', null=True)),
                ('fine_sun_sensor_sram_cur', models.TextField(blank=True, db_column='Fine_sun_sensor_SRAM_cur', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetSensCurrent_158',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetsensorratetemp162',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x_sensor_temp_val', models.TextField(blank=True, db_column='X_sensor_temp_val', null=True)),
                ('y_sensor_temp_val', models.TextField(blank=True, db_column='Y_sensor_temp_val', null=True)),
                ('z_sensor_temp_val', models.TextField(blank=True, db_column='Z_sensor_temp_val', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetSensorRateTemp_162',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetstarperformance2244',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img_capture_success', models.TextField(blank=True, db_column='Img_capture_success', null=True)),
                ('detection_success', models.TextField(blank=True, db_column='Detection_success', null=True)),
                ('identification_success', models.TextField(blank=True, db_column='Identification_success', null=True)),
                ('attitude_success', models.TextField(blank=True, db_column='Attitude_success', null=True)),
                ('processing_time_error', models.TextField(blank=True, db_column='Processing_time_error', null=True)),
                ('tracking_module_enabled', models.TextField(blank=True, db_column='Tracking_module_enabled', null=True)),
                ('predictionenabled', models.TextField(blank=True, db_column='PredictionEnabled', null=True)),
                ('comms_error', models.TextField(blank=True, db_column='Comms_error', null=True)),
                ('sample_period', models.TextField(blank=True, db_column='Sample_period', null=True)),
                ('star1_confidence', models.TextField(blank=True, db_column='Star1_confidence', null=True)),
                ('star2_confidence', models.TextField(blank=True, db_column='Star2_confidence', null=True)),
                ('star3_confidence', models.TextField(blank=True, db_column='Star3_confidence', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetStarPerformance2_244',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetstartrakerbodyvec138',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('star_body_x', models.TextField(blank=True, db_column='Star_body_x', null=True)),
                ('star_body_y', models.TextField(blank=True, db_column='Star_body_y', null=True)),
                ('star_body_z', models.TextField(blank=True, db_column='Star_body_z', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetStarTrakerBodyVec_138',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetstartrakerorbitvec139',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('star_id', models.TextField(blank=True, db_column='Star_id', null=True)),
                ('star_orbit_x', models.TextField(blank=True, db_column='Star_orbit_x', null=True)),
                ('star_orbit_y', models.TextField(blank=True, db_column='Star_orbit_y', null=True)),
                ('star_orbit_z', models.TextField(blank=True, db_column='Star_orbit_z', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetStarTrakerOrbitVec_139',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetstate129',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adcsrunmode', models.TextField(blank=True, db_column='AdcsRunMode', null=True)),
                ('altitude', models.TextField(blank=True, db_column='Altitude', null=True)),
                ('asgp4mode', models.TextField(blank=True, db_column='Asgp4Mode', null=True)),
                ('cam1overcurrent3v3', models.TextField(blank=True, db_column='Cam1Overcurrent3V3', null=True)),
                ('cam1overcurrentsram', models.TextField(blank=True, db_column='Cam1OvercurrentSram', null=True)),
                ('cam1sensdetecterror', models.TextField(blank=True, db_column='Cam1SensDetectError', null=True)),
                ('cam1sensnotidle', models.TextField(blank=True, db_column='Cam1SensNotIdle', null=True)),
                ('cam2overcurrent3v3', models.TextField(blank=True, db_column='Cam2Overcurrent3V3', null=True)),
                ('cam2overcurrentsram', models.TextField(blank=True, db_column='Cam2OvercurrentSram', null=True)),
                ('cam2sensdetecterror', models.TextField(blank=True, db_column='Cam2SensDetectError', null=True)),
                ('cam2sensnotidle', models.TextField(blank=True, db_column='Cam2SensNotIdle', null=True)),
                ('configinvaliderror', models.TextField(blank=True, db_column='ConfigInvalidError', null=True)),
                ('controlmode', models.TextField(blank=True, db_column='ControlMode', null=True)),
                ('controlmodenotallowed', models.TextField(blank=True, db_column='ControlModeNotAllowed', null=True)),
                ('csserror', models.TextField(blank=True, db_column='CssError', null=True)),
                ('cubecontrolmotorcommserror', models.TextField(blank=True, db_column='CubeControlMotorCommsError', null=True)),
                ('cubecontrolmotorpower', models.TextField(blank=True, db_column='CubeControlMotorPower', null=True)),
                ('cubecontrolmotorruntimeerror', models.TextField(blank=True, db_column='CubeControlMotorRuntimeError', null=True)),
                ('cubecontrolsignalcommserror', models.TextField(blank=True, db_column='CubeControlSignalCommsError', null=True)),
                ('cubecontrolsignalpower', models.TextField(blank=True, db_column='CubeControlSignalPower', null=True)),
                ('cubecontrolsignalruntimeerror', models.TextField(blank=True, db_column='CubeControlSignalRuntimeError', null=True)),
                ('cubesense1commserror', models.TextField(blank=True, db_column='CubeSense1CommsError', null=True)),
                ('cubesense1power', models.TextField(blank=True, db_column='CubeSense1Power', null=True)),
                ('cubesense1runtimeerror', models.TextField(blank=True, db_column='CubeSense1RuntimeError', null=True)),
                ('cubesense2commserror', models.TextField(blank=True, db_column='CubeSense2CommsError', null=True)),
                ('cubesense2power', models.TextField(blank=True, db_column='CubeSense2Power', null=True)),
                ('cubesense2runtimeerror', models.TextField(blank=True, db_column='CubeSense2RuntimeError', null=True)),
                ('cubestarcommserror', models.TextField(blank=True, db_column='CubeStarCommsError', null=True)),
                ('cubestarpower', models.TextField(blank=True, db_column='CubeStarPower', null=True)),
                ('cubestarruntimeerror', models.TextField(blank=True, db_column='CubeStarRuntimeError', null=True)),
                ('cubewheel1commserror', models.TextField(blank=True, db_column='CubeWheel1CommsError', null=True)),
                ('cubewheel1power', models.TextField(blank=True, db_column='CubeWheel1Power', null=True)),
                ('cubewheel1runtimeerror', models.TextField(blank=True, db_column='CubeWheel1RuntimeError', null=True)),
                ('cubewheel2commserror', models.TextField(blank=True, db_column='CubeWheel2CommsError', null=True)),
                ('cubewheel2power', models.TextField(blank=True, db_column='CubeWheel2Power', null=True)),
                ('cubewheel2runtimeerror', models.TextField(blank=True, db_column='CubeWheel2RuntimeError', null=True)),
                ('cubewheel3commserror', models.TextField(blank=True, db_column='CubeWheel3CommsError', null=True)),
                ('cubewheel3power', models.TextField(blank=True, db_column='CubeWheel3Power', null=True)),
                ('cubewheel3runtimeerror', models.TextField(blank=True, db_column='CubeWheel3RuntimeError', null=True)),
                ('curmagmode', models.TextField(blank=True, db_column='CurMagMode', null=True)),
                ('estimmode', models.TextField(blank=True, db_column='EstimMode', null=True)),
                ('estimatornotallowed', models.TextField(blank=True, db_column='EstimatorNotAllowed', null=True)),
                ('gpslnapower', models.TextField(blank=True, db_column='GpsLnaPower', null=True)),
                ('gpsreceiverpower', models.TextField(blank=True, db_column='GpsReceiverPower', null=True)),
                ('latitude', models.TextField(blank=True, db_column='Latitude', null=True)),
                ('longitude', models.TextField(blank=True, db_column='Longitude', null=True)),
                ('magrangeerror', models.TextField(blank=True, db_column='MagRangeError', null=True)),
                ('magfieldmodelerror', models.TextField(blank=True, db_column='MagfieldModelError', null=True)),
                ('magnetometererror', models.TextField(blank=True, db_column='MagnetometerError', null=True)),
                ('motordriverpower', models.TextField(blank=True, db_column='MotorDriverPower', null=True)),
                ('nadirsensrangeerror', models.TextField(blank=True, db_column='NadirSensRangeError', null=True)),
                ('noderecoveryerror', models.TextField(blank=True, db_column='NodeRecoveryError', null=True)),
                ('orbitparamsinvaliderror', models.TextField(blank=True, db_column='OrbitParamsInvalidError', null=True)),
                ('pitch', models.TextField(blank=True, db_column='Pitch', null=True)),
                ('posecefx', models.TextField(blank=True, db_column='PosEcefX', null=True)),
                ('posecefy', models.TextField(blank=True, db_column='PosEcefY', null=True)),
                ('posecefz', models.TextField(blank=True, db_column='PosEcefZ', null=True)),
                ('positionx', models.TextField(blank=True, db_column='PositionX', null=True)),
                ('positiony', models.TextField(blank=True, db_column='PositionY', null=True)),
                ('positionz', models.TextField(blank=True, db_column='PositionZ', null=True)),
                ('q1', models.TextField(blank=True, db_column='Q1', null=True)),
                ('q2', models.TextField(blank=True, db_column='Q2', null=True)),
                ('q3', models.TextField(blank=True, db_column='Q3', null=True)),
                ('ratesensrangeerror', models.TextField(blank=True, db_column='RateSensRangeError', null=True)),
                ('ratesensorfailure', models.TextField(blank=True, db_column='RateSensorFailure', null=True)),
                ('ratex', models.TextField(blank=True, db_column='RateX', null=True)),
                ('ratey', models.TextField(blank=True, db_column='RateY', null=True)),
                ('ratez', models.TextField(blank=True, db_column='RateZ', null=True)),
                ('roll', models.TextField(blank=True, db_column='Roll', null=True)),
                ('starmatcherror', models.TextField(blank=True, db_column='StarMatchError', null=True)),
                ('startrackovercurrent', models.TextField(blank=True, db_column='StarTrackOvercurrent', null=True)),
                ('sunabovehorizon', models.TextField(blank=True, db_column='SunAboveHorizon', null=True)),
                ('sunsensrangeerror', models.TextField(blank=True, db_column='SunSensRangeError', null=True)),
                ('velocityx', models.TextField(blank=True, db_column='VelocityX', null=True)),
                ('velocityy', models.TextField(blank=True, db_column='VelocityY', null=True)),
                ('velocityz', models.TextField(blank=True, db_column='VelocityZ', null=True)),
                ('wheelspeedrangeerror', models.TextField(blank=True, db_column='WheelSpeedRangeError', null=True)),
                ('yaw', models.TextField(blank=True, db_column='Yaw', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetState_129',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetsunsensorvec134',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x_axis_sun_vec', models.TextField(blank=True, db_column='X_axis_sun_vec', null=True)),
                ('y_axis_sun_vec', models.TextField(blank=True, db_column='Y_axis_sun_vec', null=True)),
                ('z_axis_sun_vec', models.TextField(blank=True, db_column='Z_axis_sun_vec', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetSunSensorVec_134',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetsunsensorvec135',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x_axis_sun_vec', models.TextField(blank=True, db_column='X_axis_sun_vec', null=True)),
                ('y_axis_sun_vec', models.TextField(blank=True, db_column='Y_axis_sun_vec', null=True)),
                ('z_axis_sun_vec', models.TextField(blank=True, db_column='Z_axis_sun_vec', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetSunSensorVec_135',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgettemperature161',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mcu_temp_val', models.TextField(blank=True, db_column='MCU_temp_val', null=True)),
                ('magnetometer_temp_val', models.TextField(blank=True, db_column='Magnetometer_temp_val', null=True)),
                ('rate_sensor_temp_val', models.TextField(blank=True, db_column='Rate_sensor_temp_val', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetTemperature_161',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcsgetvelocityeci182',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x_eci_velocity', models.TextField(blank=True, db_column='X_eci_velocity', null=True)),
                ('y_eci_velocity', models.TextField(blank=True, db_column='Y_eci_velocity', null=True)),
                ('z_eci_velocity', models.TextField(blank=True, db_column='Z_eci_velocity', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsGetVelocityECI_182',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adcstle130',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inclination', models.TextField(blank=True, db_column='Inclination', null=True)),
                ('eccentricity', models.TextField(blank=True, db_column='Eccentricity', null=True)),
                ('raan', models.TextField(blank=True, db_column='Raan', null=True)),
                ('aop', models.TextField(blank=True, db_column='AoP', null=True)),
                ('b_star_drag_term', models.TextField(blank=True, db_column='B_star_drag_term', null=True)),
                ('mean_motion', models.TextField(blank=True, db_column='Mean_motion', null=True)),
                ('mean_anomaly', models.TextField(blank=True, db_column='Mean_anomaly', null=True)),
                ('epoch', models.TextField(blank=True, db_column='Epoch', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'AdcsTle_130',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AttErr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestep', models.DateTimeField(blank=True, null=True)),
                ('x', models.TextField(blank=True, null=True)),
                ('y', models.TextField(blank=True, null=True)),
                ('z', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'att_err',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Attitude',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestep', models.DateTimeField(blank=True, null=True)),
                ('roll', models.TextField(blank=True, null=True)),
                ('pitch', models.TextField(blank=True, null=True)),
                ('yaw', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'attitude',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Batterrypercantage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bat_per', models.TextField(blank=True, db_column='Bat_per', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'BatterryPercantage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CommandMode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mode', models.TextField(blank=True, null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'Command_Mode',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CommsTmInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temp_mcu', models.TextField(blank=True, db_column='Temp_mcu', null=True)),
                ('temp_fpga', models.TextField(blank=True, db_column='Temp_fpga', null=True)),
                ('temp_xcvr', models.TextField(blank=True, db_column='Temp_xcvr', null=True)),
                ('temp_resrv1', models.TextField(blank=True, db_column='Temp_resrv1', null=True)),
                ('temp_resrv2', models.TextField(blank=True, db_column='Temp_resrv2', null=True)),
                ('temp_resrv3', models.TextField(blank=True, db_column='Temp_resrv3', null=True)),
                ('volt_vint', models.TextField(blank=True, null=True)),
                ('volt_vaux', models.TextField(blank=True, db_column='Volt_vaux', null=True)),
                ('volt_vbram', models.TextField(blank=True, db_column='Volt_vbram', null=True)),
                ('volt_vpint', models.TextField(blank=True, db_column='Volt_vpint', null=True)),
                ('volt_vpaux', models.TextField(blank=True, db_column='Volt_vpaux', null=True)),
                ('volt_vpdro', models.TextField(blank=True, db_column='Volt_vpdro', null=True)),
                ('cur_resrv1', models.TextField(blank=True, db_column='Cur_resrv1', null=True)),
                ('cur_resrv2', models.TextField(blank=True, db_column='Cur_resrv2', null=True)),
                ('cur_resrv3', models.TextField(blank=True, db_column='Cur_resrv3', null=True)),
                ('cur_resrv4', models.TextField(blank=True, db_column='Cur_resrv4', null=True)),
                ('power_resrv1', models.TextField(blank=True, db_column='Power_resrv1', null=True)),
                ('power_resrv2', models.TextField(blank=True, db_column='Power_resrv2', null=True)),
                ('power_resrv3', models.TextField(blank=True, db_column='Power_resrv3', null=True)),
                ('power_resrv4', models.TextField(blank=True, db_column='Power_resrv4', null=True)),
                ('power_resrv5', models.TextField(blank=True, db_column='Power_resrv5', null=True)),
                ('rsvd', models.TextField(blank=True, db_column='Rsvd', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'Comms_tm_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CommsTmPropXlink398',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temp_mcu', models.TextField(blank=True, db_column='Temp_mcu', null=True)),
                ('temp_fpga', models.TextField(blank=True, db_column='Temp_fpga', null=True)),
                ('temp_xcvr', models.TextField(blank=True, db_column='Temp_xcvr', null=True)),
                ('temp_resrv1', models.TextField(blank=True, db_column='Temp_resrv1', null=True)),
                ('temp_resrv2', models.TextField(blank=True, db_column='Temp_resrv2', null=True)),
                ('temp_resrv3', models.TextField(blank=True, db_column='Temp_resrv3', null=True)),
                ('volt_vint', models.TextField(blank=True, null=True)),
                ('volt_vaux', models.TextField(blank=True, db_column='Volt_vaux', null=True)),
                ('volt_vbram', models.TextField(blank=True, db_column='Volt_vbram', null=True)),
                ('volt_vpint', models.TextField(blank=True, db_column='Volt_vpint', null=True)),
                ('volt_vpaux', models.TextField(blank=True, db_column='Volt_vpaux', null=True)),
                ('volt_vpdro', models.TextField(blank=True, db_column='Volt_vpdro', null=True)),
                ('cur_resrv1', models.TextField(blank=True, db_column='Cur_resrv1', null=True)),
                ('cur_resrv2', models.TextField(blank=True, db_column='Cur_resrv2', null=True)),
                ('cur_resrv3', models.TextField(blank=True, db_column='Cur_resrv3', null=True)),
                ('cur_resrv4', models.TextField(blank=True, db_column='Cur_resrv4', null=True)),
                ('power_resrv1', models.TextField(blank=True, db_column='Power_resrv1', null=True)),
                ('power_resrv2', models.TextField(blank=True, db_column='Power_resrv2', null=True)),
                ('power_resrv3', models.TextField(blank=True, db_column='Power_resrv3', null=True)),
                ('power_resrv4', models.TextField(blank=True, db_column='Power_resrv4', null=True)),
                ('power_resrv5', models.TextField(blank=True, db_column='Power_resrv5', null=True)),
                ('rsvd', models.TextField(blank=True, db_column='Rsvd', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'Comms_tm_prop_xlink_398',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CommsUhfGetFullCfg814',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sync1', models.TextField(blank=True, db_column='Sync1', null=True)),
                ('sync0', models.TextField(blank=True, db_column='Sync0', null=True)),
                ('pktlen', models.TextField(blank=True, db_column='Pktlen', null=True)),
                ('pktctrl1', models.TextField(blank=True, db_column='Pktctrl1', null=True)),
                ('pktctrl0', models.TextField(blank=True, db_column='Pktctrl0', null=True)),
                ('addr', models.TextField(blank=True, db_column='Addr', null=True)),
                ('channr', models.TextField(blank=True, db_column='Channr', null=True)),
                ('fsctrl1', models.TextField(blank=True, db_column='Fsctrl1', null=True)),
                ('fsctrl0', models.TextField(blank=True, db_column='Fsctrl0', null=True)),
                ('freq2', models.TextField(blank=True, db_column='Freq2', null=True)),
                ('freq1', models.TextField(blank=True, db_column='Freq1', null=True)),
                ('freq0', models.TextField(blank=True, db_column='Freq0', null=True)),
                ('mdmcfg4', models.TextField(blank=True, db_column='Mdmcfg4', null=True)),
                ('mdmcfg3', models.TextField(blank=True, db_column='Mdmcfg3', null=True)),
                ('mdmcfg2', models.TextField(blank=True, db_column='Mdmcfg2', null=True)),
                ('mdmcfg1', models.TextField(blank=True, db_column='Mdmcfg1', null=True)),
                ('mdmcfg0', models.TextField(blank=True, db_column='Mdmcfg0', null=True)),
                ('deviatn', models.TextField(blank=True, db_column='Deviatn', null=True)),
                ('mcsm2', models.TextField(blank=True, db_column='Mcsm2', null=True)),
                ('mcsm1', models.TextField(blank=True, db_column='Mcsm1', null=True)),
                ('mcsm0', models.TextField(blank=True, db_column='Mcsm0', null=True)),
                ('foccfg', models.TextField(blank=True, db_column='Foccfg', null=True)),
                ('bscfg', models.TextField(blank=True, db_column='Bscfg', null=True)),
                ('agcctrl2', models.TextField(blank=True, db_column='Agcctrl2', null=True)),
                ('agcctrl1', models.TextField(blank=True, db_column='Agcctrl1', null=True)),
                ('agcctrl0', models.TextField(blank=True, db_column='Agcctrl0', null=True)),
                ('frend1', models.TextField(blank=True, db_column='Frend1', null=True)),
                ('frend0', models.TextField(blank=True, db_column='Frend0', null=True)),
                ('fscal3', models.TextField(blank=True, db_column='Fscal3', null=True)),
                ('fscal2', models.TextField(blank=True, db_column='Fscal2', null=True)),
                ('fscal1', models.TextField(blank=True, db_column='Fscal1', null=True)),
                ('fscal0', models.TextField(blank=True, db_column='Fscal0', null=True)),
                ('test2', models.TextField(blank=True, db_column='Test2', null=True)),
                ('test1', models.TextField(blank=True, db_column='Test1', null=True)),
                ('test0', models.TextField(blank=True, db_column='Test0', null=True)),
                ('pa_table7', models.TextField(blank=True, db_column='Pa_table7', null=True)),
                ('pa_table6', models.TextField(blank=True, db_column='Pa_table6', null=True)),
                ('pa_table5', models.TextField(blank=True, db_column='Pa_table5', null=True)),
                ('pa_table4', models.TextField(blank=True, db_column='Pa_table4', null=True)),
                ('pa_table3', models.TextField(blank=True, db_column='Pa_table3', null=True)),
                ('pa_table2', models.TextField(blank=True, db_column='Pa_table2', null=True)),
                ('pa_table1', models.TextField(blank=True, db_column='Pa_table1', null=True)),
                ('pa_table0', models.TextField(blank=True, db_column='Pa_table0', null=True)),
                ('iocfg2', models.TextField(blank=True, db_column='Iocfg2', null=True)),
                ('iocfg1', models.TextField(blank=True, db_column='Iocfg1', null=True)),
                ('iocfg0', models.TextField(blank=True, db_column='Iocfg0', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'Comms_uhf_get_full_cfg_814',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CommsUhfGetTmInfo800',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uptime', models.TextField(blank=True, db_column='Uptime', null=True)),
                ('uart0_rx_count', models.TextField(blank=True, db_column='Uart0_RX_Count', null=True)),
                ('uart1_rx_count', models.TextField(blank=True, db_column='Uart1_RX_Count', null=True)),
                ('rx_mode', models.TextField(blank=True, db_column='Rx_mode', null=True)),
                ('tx_mode', models.TextField(blank=True, db_column='Tx_mode', null=True)),
                ('adc1', models.TextField(blank=True, db_column='ADC1', null=True)),
                ('adc2', models.TextField(blank=True, db_column='ADC2', null=True)),
                ('adc3', models.TextField(blank=True, db_column='ADC3', null=True)),
                ('adc4', models.TextField(blank=True, db_column='ADC4', null=True)),
                ('adc5', models.TextField(blank=True, db_column='ADC5', null=True)),
                ('adc6', models.TextField(blank=True, db_column='ADC6', null=True)),
                ('adc7', models.TextField(blank=True, db_column='ADC7', null=True)),
                ('adc8', models.TextField(blank=True, db_column='ADC8', null=True)),
                ('adc9', models.TextField(blank=True, db_column='ADC9', null=True)),
                ('adc10', models.TextField(blank=True, db_column='ADC10', null=True)),
                ('last_rssi', models.TextField(blank=True, db_column='Last_rssi', null=True)),
                ('last_lqi', models.TextField(blank=True, db_column='Last_lqi', null=True)),
                ('last_f_reqest', models.TextField(blank=True, db_column='Last_F_Reqest', null=True)),
                ('pkt_sent', models.TextField(blank=True, db_column='Pkt_sent', null=True)),
                ('cs_count', models.TextField(blank=True, db_column='CS_Count', null=True)),
                ('pkt_good', models.TextField(blank=True, db_column='Pkt_good', null=True)),
                ('pkt_rejected_chksum', models.TextField(blank=True, db_column='Pkt_Rejected_Chksum', null=True)),
                ('pkt_rejected_rsvrd', models.TextField(blank=True, db_column='Pkt_Rejected_Rsvrd', null=True)),
                ('pkt_rejected_othr', models.TextField(blank=True, db_column='Pkt_Rejected_Othr', null=True)),
                ('rsrvd0', models.TextField(blank=True, db_column='Rsrvd0', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'Comms_uhf_get_tm_info_800',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CommsUhfSetPwrCfg811',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_dvga_gain', models.TextField(blank=True, db_column='Max_DVGA_Gain', null=True)),
                ('max_lna_gain', models.TextField(blank=True, db_column='Max_LNA_Gain', null=True)),
                ('lna_sel', models.TextField(blank=True, db_column='LNA_Sel', null=True)),
                ('filter_len', models.TextField(blank=True, db_column='Filter_Len', null=True)),
                ('power_table_sel', models.TextField(blank=True, db_column='Power_Table_sel', null=True)),
                ('rf_output_power', models.TextField(blank=True, db_column='RF_Output_Power', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'Comms_uhf_set_pwr_cfg_811',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CommsUhfSetRxCfg805',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_number', models.TextField(blank=True, db_column='Channel_Number', null=True)),
                ('modulation_type', models.TextField(blank=True, db_column='Modulation_Type', null=True)),
                ('sync_mode', models.TextField(blank=True, db_column='Sync_Mode', null=True)),
                ('enable_dc_filter', models.TextField(blank=True, db_column='Enable_DC_filter', null=True)),
                ('fec_enable', models.TextField(blank=True, db_column='FEC_enable', null=True)),
                ('preamble_num', models.TextField(blank=True, db_column='Preamble_Num', null=True)),
                ('manchester_enable', models.TextField(blank=True, db_column='Manchester_Enable', null=True)),
                ('rx_attenuation', models.TextField(blank=True, db_column='RX_Attenuation', null=True)),
                ('base_frequency', models.TextField(blank=True, db_column='Base_Frequency', null=True)),
                ('if_frequnecy', models.TextField(blank=True, db_column='IF_Frequnecy', null=True)),
                ('channel_spacing', models.TextField(blank=True, db_column='Channel_Spacing', null=True)),
                ('frequency_offset', models.TextField(blank=True, db_column='Frequency_Offset', null=True)),
                ('data_rate', models.TextField(blank=True, db_column='Data_Rate', null=True)),
                ('channel_bw', models.TextField(blank=True, db_column='Channel_BW', null=True)),
                ('frequency_deviation', models.TextField(blank=True, db_column='Frequency_deviation', null=True)),
                ('rx_sync_time_out', models.TextField(blank=True, db_column='RX_Sync_Time_Out', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'Comms_uhf_set_rx_cfg_805',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CommsUhfSetTxCfg803',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_number', models.TextField(blank=True, db_column='Channel_Number', null=True)),
                ('modulation_type', models.TextField(blank=True, db_column='Modulation_Type', null=True)),
                ('sync_mode', models.TextField(blank=True, db_column='Sync_Mode', null=True)),
                ('enable_dc_filter', models.TextField(blank=True, db_column='Enable_DC_filter', null=True)),
                ('fec_enable', models.TextField(blank=True, db_column='FEC_enable', null=True)),
                ('preamble_num', models.TextField(blank=True, db_column='Preamble_Num', null=True)),
                ('manchester_enable', models.TextField(blank=True, db_column='Manchester_Enable', null=True)),
                ('base_frequency', models.TextField(blank=True, db_column='Base_Frequency', null=True)),
                ('if_frequnecy', models.TextField(blank=True, db_column='IF_Frequnecy', null=True)),
                ('channel_spacing', models.TextField(blank=True, db_column='Channel_Spacing', null=True)),
                ('frequency_offset', models.TextField(blank=True, db_column='Frequency_Offset', null=True)),
                ('data_rate', models.TextField(blank=True, db_column='Data_Rate', null=True)),
                ('channel_bw', models.TextField(blank=True, db_column='Channel_BW', null=True)),
                ('frequency_deviation', models.TextField(blank=True, db_column='Frequency_deviation', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'Comms_uhf_set_tx_cfg_803',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CommsUhfSetTxPktCfg807',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('demod_sync_word', models.TextField(blank=True, db_column='Demod_sync_word', null=True)),
                ('max_packet_length', models.TextField(blank=True, db_column='Max_Packet_Length', null=True)),
                ('whitening_enable', models.TextField(blank=True, db_column='Whitening_Enable', null=True)),
                ('packet_format', models.TextField(blank=True, db_column='Packet_Format', null=True)),
                ('crc_enable', models.TextField(blank=True, db_column='CRC_Enable', null=True)),
                ('pkt_len_config', models.TextField(blank=True, db_column='Pkt_Len_Config', null=True)),
                ('device_addr', models.TextField(blank=True, db_column='Device_Addr', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'Comms_uhf_set_tx_pkt_cfg_807',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CommsUhfSetTxPktCfg809',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('demod_sync_word', models.TextField(blank=True, db_column='Demod_sync_word', null=True)),
                ('max_packet_length', models.TextField(blank=True, db_column='Max_Packet_Length', null=True)),
                ('whitening_enable', models.TextField(blank=True, db_column='Whitening_Enable', null=True)),
                ('packet_format', models.TextField(blank=True, db_column='Packet_Format', null=True)),
                ('crc_enable', models.TextField(blank=True, db_column='CRC_Enable', null=True)),
                ('pkt_len_config', models.TextField(blank=True, db_column='Pkt_Len_Config', null=True)),
                ('device_addr', models.TextField(blank=True, db_column='Device_Addr', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'Comms_uhf_set_tx_pkt_cfg_809',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Controlmode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mode', models.CharField(blank=True, max_length=255, null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'ControlMode',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ControlTorque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestep', models.DateTimeField(blank=True, null=True)),
                ('x', models.TextField(blank=True, null=True)),
                ('y', models.TextField(blank=True, null=True)),
                ('z', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'control_torque',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cumulativepowerdata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cumulativepower', models.TextField(blank=True, db_column='cumulativePower', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'CumulativePowerData',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DigitalThermostatInfo533',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instance_id', models.TextField(blank=True, db_column='Instance_id', null=True)),
                ('high_temp_threshold', models.TextField(blank=True, db_column='High_temp_threshold', null=True)),
                ('low_temp_threshold', models.TextField(blank=True, db_column='Low_temp_threshold', null=True)),
                ('po_pin_logic', models.TextField(blank=True, db_column='Po_pin_logic', null=True)),
                ('adc_resolution', models.TextField(blank=True, db_column='Adc_resolution', null=True)),
                ('operating_mode', models.TextField(blank=True, db_column='Operating_mode', null=True)),
                ('temperature', models.TextField(blank=True, db_column='Temperature', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'Digital_thermostat_info_533',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Edgetemperaturesensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tempsensor', models.TextField(blank=True, db_column='TempSensor', null=True)),
                ('epochtime', models.DateTimeField(blank=True, db_column='EpochTime', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'EdgeTemperatureSensor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Edgethermometersensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tempsensor', models.TextField(blank=True, db_column='TempSensor', null=True)),
                ('sensortime', models.DateTimeField(blank=True, db_column='SensorTime', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'EdgeThermometerSensor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Edgevoltagemonitorsensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sensorvoltage', models.TextField(blank=True, db_column='SensorVoltage', null=True)),
                ('sensorcurrent', models.TextField(blank=True, db_column='SensorCurrent', null=True)),
                ('admepochtime', models.DateTimeField(blank=True, db_column='AdmEpochTime', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'EdgeVoltageMonitorSensor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EpsGetBtryBrdRdS203',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eps_sts_var', models.TextField(blank=True, db_column='Eps_sts_var', null=True)),
                ('battery_volt_count', models.TextField(blank=True, db_column='Battery_volt_count', null=True)),
                ('battery_temp_count', models.TextField(blank=True, db_column='Battery_temp_count', null=True)),
                ('response', models.TextField(blank=True, db_column='Response', null=True)),
                ('total_battery_voltage', models.TextField(blank=True, db_column='Total_battery_voltage', null=True)),
                ('battery_voltage1', models.TextField(blank=True, db_column='Battery_voltage1', null=True)),
                ('battery_voltage2', models.TextField(blank=True, db_column='Battery_voltage2', null=True)),
                ('battery_voltage3', models.TextField(blank=True, db_column='Battery_voltage3', null=True)),
                ('battery_voltage4', models.TextField(blank=True, db_column='Battery_voltage4', null=True)),
                ('battery_voltage5', models.TextField(blank=True, db_column='Battery_voltage5', null=True)),
                ('battery_voltage6', models.TextField(blank=True, db_column='Battery_voltage6', null=True)),
                ('battery_voltage7', models.TextField(blank=True, db_column='Battery_voltage7', null=True)),
                ('battery_voltage8', models.TextField(blank=True, db_column='Battery_voltage8', null=True)),
                ('battery_current', models.TextField(blank=True, db_column='Battery_current', null=True)),
                ('battery_temperature1', models.TextField(blank=True, db_column='Battery_temperature1', null=True)),
                ('battery_temperature2', models.TextField(blank=True, db_column='Battery_temperature2', null=True)),
                ('battery_temperature3', models.TextField(blank=True, db_column='Battery_temperature3', null=True)),
                ('battery_temperature4', models.TextField(blank=True, db_column='Battery_temperature4', null=True)),
                ('battery_temperature5', models.TextField(blank=True, db_column='Battery_temperature5', null=True)),
                ('battery_temperature6', models.TextField(blank=True, db_column='Battery_temperature6', null=True)),
                ('battery_temperature7', models.TextField(blank=True, db_column='Battery_temperature7', null=True)),
                ('battery_temperature8', models.TextField(blank=True, db_column='Battery_temperature8', null=True)),
                ('battery_flag', models.TextField(blank=True, db_column='Battery_flag', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'Eps_get_btry_brd_rd_s_203',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EpsGetBtryBrdStngS203',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eps_sts_var', models.TextField(blank=True, db_column='Eps_sts_var', null=True)),
                ('battery_temp_sense_count', models.TextField(blank=True, db_column='Battery_temp_sense_count', null=True)),
                ('response', models.TextField(blank=True, db_column='Response', null=True)),
                ('current_limit_charge', models.TextField(blank=True, db_column='Current_limit_charge', null=True)),
                ('current_limit_discharge', models.TextField(blank=True, db_column='Current_limit_discharge', null=True)),
                ('temperature_limit_low1', models.TextField(blank=True, db_column='Temperature_limit_low1', null=True)),
                ('temperature_limit_high1', models.TextField(blank=True, db_column='Temperature_limit_high1', null=True)),
                ('temp_lmt_low2', models.TextField(blank=True, db_column='Temp_lmt_low2', null=True)),
                ('temp_lmt_high2', models.TextField(blank=True, db_column='Temp_lmt_high2', null=True)),
                ('temp_lmt_low3', models.TextField(blank=True, db_column='Temp_lmt_low3', null=True)),
                ('temp_lmt_high3', models.TextField(blank=True, db_column='Temp_lmt_high3', null=True)),
                ('temp_lmt_low4', models.TextField(blank=True, db_column='Temp_lmt_low4', null=True)),
                ('temp_lmt_high4', models.TextField(blank=True, db_column='Temp_lmt_high4', null=True)),
                ('temp_lmt_low5', models.TextField(blank=True, db_column='Temp_lmt_low5', null=True)),
                ('temp_lmt_high5', models.TextField(blank=True, db_column='Temp_lmt_high5', null=True)),
                ('temp_lmt_low6', models.TextField(blank=True, db_column='Temp_lmt_low6', null=True)),
                ('temp_lmt_high6', models.TextField(blank=True, db_column='Temp_lmt_high6', null=True)),
                ('temp_lmt_low7', models.TextField(blank=True, db_column='Temp_lmt_low7', null=True)),
                ('temp_lmt_high7', models.TextField(blank=True, db_column='Temp_lmt_high7', null=True)),
                ('temp_lmt_low8', models.TextField(blank=True, db_column='Temp_lmt_low8', null=True)),
                ('temp_lmt_high8', models.TextField(blank=True, db_column='Temp_lmt_high8', null=True)),
                ('heat_mode', models.TextField(blank=True, db_column='Heat_mode', null=True)),
                ('heat_mode_flags', models.TextField(blank=True, db_column='Heat_mode_flags', null=True)),
                ('timest', models.TimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'Eps_get_btry_brd_stng_s_203',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EpsGetConvBrdStngS201',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eps_sts_var', models.TextField(blank=True, db_column='Eps_sts_var', null=True)),
                ('op_conv_volt_count', models.TextField(blank=True, db_column='Op_conv_volt_count', null=True)),
                ('resp', models.TextField(blank=True, db_column='Resp', null=True)),
                ('op_conv_volt1', models.TextField(blank=True, db_column='Op_conv_volt1', null=True)),
                ('op_conv_volt2', models.TextField(blank=True, db_column='Op_conv_volt2', null=True)),
                ('op_conv_volt3', models.TextField(blank=True, db_column='Op_conv_volt3', null=True)),
                ('op_conv_volt4', models.TextField(blank=True, db_column='Op_conv_volt4', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'Eps_get_conv_brd_stng_s_201',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EpsGetOutChnlCurRdS206',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eps_sts_var', models.TextField(blank=True, db_column='Eps_sts_var', null=True)),
                ('voltage_rail_count', models.TextField(blank=True, db_column='Voltage_rail_count', null=True)),
                ('response', models.TextField(blank=True, db_column='Response', null=True)),
                ('voltage_rail1', models.TextField(blank=True, db_column='Voltage_rail1', null=True)),
                ('voltage_rail2', models.TextField(blank=True, db_column='Voltage_rail2', null=True)),
                ('voltage_rail3', models.TextField(blank=True, db_column='Voltage_rail3', null=True)),
                ('voltage_rail4', models.TextField(blank=True, db_column='Voltage_rail4', null=True)),
                ('voltage_rail5', models.TextField(blank=True, db_column='Voltage_rail5', null=True)),
                ('voltage_rail6', models.TextField(blank=True, db_column='Voltage_rail6', null=True)),
                ('voltage_rail7', models.TextField(blank=True, db_column='Voltage_rail7', null=True)),
                ('voltage_rail8', models.TextField(blank=True, db_column='Voltage_rail8', null=True)),
                ('voltage_rail9', models.TextField(blank=True, db_column='Voltage_rail9', null=True)),
                ('voltage_rail10', models.TextField(blank=True, db_column='Voltage_rail10', null=True)),
                ('voltage_rail11', models.TextField(blank=True, db_column='Voltage_rail11', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'Eps_get_out_chnl_cur_rd_s_206',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EpsGetOutChnlStsS206',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eps_sts_var', models.TextField(blank=True, db_column='Eps_sts_var', null=True)),
                ('response', models.TextField(blank=True, db_column='Response', null=True)),
                ('channel1', models.TextField(blank=True, db_column='Channel1', null=True)),
                ('channel2', models.TextField(blank=True, db_column='Channel2', null=True)),
                ('channel3', models.TextField(blank=True, db_column='Channel3', null=True)),
                ('channel4', models.TextField(blank=True, db_column='Channel4', null=True)),
                ('channel5', models.TextField(blank=True, db_column='Channel5', null=True)),
                ('channel6', models.TextField(blank=True, db_column='Channel6', null=True)),
                ('channel7', models.TextField(blank=True, db_column='Channel7', null=True)),
                ('channel8', models.TextField(blank=True, db_column='Channel8', null=True)),
                ('channel9', models.TextField(blank=True, db_column='Channel9', null=True)),
                ('channel10', models.TextField(blank=True, db_column='Channel10', null=True)),
                ('channel11', models.TextField(blank=True, db_column='Channel11', null=True)),
                ('channel12', models.TextField(blank=True, db_column='Channel12', null=True)),
                ('hrm_rls_left', models.TextField(blank=True, db_column='Hrm_rls_left', null=True)),
                ('hrm_rls_right', models.TextField(blank=True, db_column='Hrm_rls_right', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'Eps_get_out_chnl_sts_s_206',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Estimationmode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mode', models.CharField(blank=True, max_length=255, null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'EstimationMode',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GetProcUtilInfo500',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.TextField(blank=True, db_column='Data', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'Get_proc_util_info_500',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GetSysUptime583',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.TextField(blank=True, db_column='Data', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'Get_sys_uptime_583',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gpstemperaturesensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tempsensor', models.TextField(blank=True, db_column='TempSensor', null=True)),
                ('epochtime', models.DateTimeField(blank=True, db_column='EpochTime', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'GPSTemperatureSensor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImuInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instance_id', models.TextField(blank=True, db_column='Instance_id', null=True)),
                ('accel_x', models.TextField(blank=True, db_column='Accel_x', null=True)),
                ('accel_y', models.TextField(blank=True, db_column='Accel_y', null=True)),
                ('accel_z', models.TextField(blank=True, db_column='Accel_z', null=True)),
                ('gyro_x', models.TextField(blank=True, db_column='Gyro_x', null=True)),
                ('gyro_y', models.TextField(blank=True, db_column='Gyro_y', null=True)),
                ('gyro_z', models.TextField(blank=True, db_column='Gyro_z', null=True)),
                ('mag_x', models.TextField(blank=True, db_column='Mag_x', null=True)),
                ('mag_y', models.TextField(blank=True, db_column='Mag_y', null=True)),
                ('mag_z', models.TextField(blank=True, db_column='Mag_z', null=True)),
                ('mag_rhall', models.TextField(blank=True, db_column='Mag_rhall', null=True)),
                ('power', models.TextField(blank=True, db_column='Power', null=True)),
                ('odr', models.TextField(blank=True, db_column='Odr', null=True)),
                ('range1', models.TextField(blank=True, db_column='Range1', null=True)),
                ('bw', models.TextField(blank=True, db_column='Bw', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'Imu_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Obcpowermonitorsensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sensorvbusvoltage', models.TextField(blank=True, db_column='SensorVBusVoltage', null=True)),
                ('sensorvshuntvoltage', models.TextField(blank=True, db_column='SensorVShuntVoltage', null=True)),
                ('sensorcurrent', models.TextField(blank=True, db_column='SensorCurrent', null=True)),
                ('sensorpower', models.TextField(blank=True, db_column='SensorPower', null=True)),
                ('epochtime', models.DateTimeField(blank=True, db_column='EpochTime', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'OBCPowerMonitorSensor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Obctemperaturesensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tempsensor', models.TextField(blank=True, db_column='TempSensor', null=True)),
                ('epochtime', models.DateTimeField(blank=True, db_column='EpochTime', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'OBCTemperatureSensor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Omega',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestep', models.DateTimeField(blank=True, null=True)),
                ('x', models.TextField(blank=True, null=True)),
                ('y', models.TextField(blank=True, null=True)),
                ('z', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'omega',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Overview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frame_sent', models.TextField(blank=True, null=True)),
                ('frame_received', models.TextField(blank=True, null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Overview',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Payload1Counters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count1', models.TextField(blank=True, db_column='Count1', null=True)),
                ('count2', models.TextField(blank=True, db_column='Count2', null=True)),
                ('count3', models.TextField(blank=True, db_column='Count3', null=True)),
                ('count4', models.TextField(blank=True, db_column='Count4', null=True)),
                ('count5', models.TextField(blank=True, db_column='Count5', null=True)),
                ('count6', models.TextField(blank=True, db_column='Count6', null=True)),
                ('count7', models.TextField(blank=True, db_column='Count7', null=True)),
                ('count8', models.TextField(blank=True, db_column='Count8', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'Payload1Counters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Payload2Counters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count1', models.TextField(blank=True, db_column='Count1', null=True)),
                ('count2', models.TextField(blank=True, db_column='Count2', null=True)),
                ('count3', models.TextField(blank=True, db_column='Count3', null=True)),
                ('count4', models.TextField(blank=True, db_column='Count4', null=True)),
                ('count5', models.TextField(blank=True, db_column='Count5', null=True)),
                ('count6', models.TextField(blank=True, db_column='Count6', null=True)),
                ('count7', models.TextField(blank=True, db_column='Count7', null=True)),
                ('count8', models.TextField(blank=True, db_column='Count8', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'Payload2Counters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Payload3Counters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count1', models.TextField(blank=True, db_column='Count1', null=True)),
                ('count2', models.TextField(blank=True, db_column='Count2', null=True)),
                ('count3', models.TextField(blank=True, db_column='Count3', null=True)),
                ('count4', models.TextField(blank=True, db_column='Count4', null=True)),
                ('count5', models.TextField(blank=True, db_column='Count5', null=True)),
                ('count6', models.TextField(blank=True, db_column='Count6', null=True)),
                ('count7', models.TextField(blank=True, db_column='Count7', null=True)),
                ('count8', models.TextField(blank=True, db_column='Count8', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'Payload3Counters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Payload4Counters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count1', models.TextField(blank=True, db_column='Count1', null=True)),
                ('count2', models.TextField(blank=True, db_column='Count2', null=True)),
                ('count3', models.TextField(blank=True, db_column='Count3', null=True)),
                ('count4', models.TextField(blank=True, db_column='Count4', null=True)),
                ('count5', models.TextField(blank=True, db_column='Count5', null=True)),
                ('count6', models.TextField(blank=True, db_column='Count6', null=True)),
                ('count7', models.TextField(blank=True, db_column='Count7', null=True)),
                ('count8', models.TextField(blank=True, db_column='Count8', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'Payload4Counters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PsHealthStatusResponseS605',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpu_usage', models.TextField(blank=True, db_column='Cpu_usage', null=True)),
                ('total_mem', models.TextField(blank=True, db_column='Total_mem', null=True)),
                ('free_mem', models.TextField(blank=True, db_column='Free_mem', null=True)),
                ('used_mem', models.TextField(blank=True, db_column='Used_mem', null=True)),
                ('ps_uptime_minutes', models.TextField(blank=True, db_column='Ps_uptime_minutes', null=True)),
                ('total_storage_in_mb', models.TextField(blank=True, db_column='Total_storage_in_MB', null=True)),
                ('used_storage_in_mb', models.TextField(blank=True, db_column='Used_storage_in_MB', null=True)),
                ('ps_utc_current_time1', models.TextField(blank=True, db_column='Ps_utc_current_time1', null=True)),
                ('ps_utc_current_time2', models.TextField(blank=True, db_column='Ps_utc_current_time2', null=True)),
                ('ps_utc_current_time3', models.TextField(blank=True, db_column='Ps_utc_current_time3', null=True)),
                ('ps_utc_current_time4', models.TextField(blank=True, db_column='Ps_utc_current_time4', null=True)),
                ('ps_utc_current_time5', models.TextField(blank=True, db_column='Ps_utc_current_time5', null=True)),
                ('ps_utc_current_time6', models.TextField(blank=True, db_column='Ps_utc_current_time6', null=True)),
                ('ps_utc_current_time7', models.TextField(blank=True, db_column='Ps_utc_current_time7', null=True)),
                ('ps_utc_current_time8', models.TextField(blank=True, db_column='Ps_utc_current_time8', null=True)),
                ('ps_utc_current_time9', models.TextField(blank=True, db_column='Ps_utc_current_time9', null=True)),
                ('ps_utc_current_time10', models.TextField(blank=True, db_column='Ps_utc_current_time10', null=True)),
                ('ps_utc_current_time11', models.TextField(blank=True, db_column='Ps_utc_current_time11', null=True)),
                ('ps_utc_current_time12', models.TextField(blank=True, db_column='Ps_utc_current_time12', null=True)),
                ('ps_utc_current_time13', models.TextField(blank=True, db_column='Ps_utc_current_time13', null=True)),
                ('ps_utc_current_time14', models.TextField(blank=True, db_column='Ps_utc_current_time14', null=True)),
                ('ps_utc_current_time15', models.TextField(blank=True, db_column='Ps_utc_current_time15', null=True)),
                ('ps_utc_current_time16', models.TextField(blank=True, db_column='Ps_utc_current_time16', null=True)),
                ('ps_utc_current_time17', models.TextField(blank=True, db_column='Ps_utc_current_time17', null=True)),
                ('ps_utc_current_time18', models.TextField(blank=True, db_column='Ps_utc_current_time18', null=True)),
                ('ps_utc_current_time19', models.TextField(blank=True, db_column='Ps_utc_current_time19', null=True)),
                ('ps_utc_current_time20', models.TextField(blank=True, db_column='Ps_utc_current_time20', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'PS_health_status_response_s_605',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pspowermonitorsensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sensorvbusvoltage', models.TextField(blank=True, db_column='SensorVBusVoltage', null=True)),
                ('sensorvshuntvoltage', models.TextField(blank=True, db_column='SensorVShuntVoltage', null=True)),
                ('sensorcurrent', models.TextField(blank=True, db_column='SensorCurrent', null=True)),
                ('sensorpower', models.TextField(blank=True, db_column='SensorPower', null=True)),
                ('epochtime', models.IntegerField(blank=True, db_column='EpochTime', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'PSPowerMonitorSensor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pstemperaturesensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tempsensor', models.TextField(blank=True, db_column='TempSensor', null=True)),
                ('epochtime', models.DateTimeField(blank=True, db_column='EpochTime', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'PSTemperatureSensor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Psthermometersensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tempsensor', models.TextField(blank=True, db_column='TempSensor', null=True)),
                ('sensortime', models.DateTimeField(blank=True, db_column='SensorTime', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'PSThermometerSensor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Psvoltagemonitorsensor1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sensorvoltage', models.TextField(blank=True, db_column='SensorVoltage', null=True)),
                ('sensorcurrent', models.TextField(blank=True, db_column='SensorCurrent', null=True)),
                ('admepochtime', models.DateTimeField(blank=True, db_column='AdmEpochTime', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'PSVoltageMonitorSensor1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Psvoltagemonitorsensor2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sensorvoltage', models.TextField(blank=True, db_column='SensorVoltage', null=True)),
                ('sensorcurrent', models.TextField(blank=True, db_column='SensorCurrent', null=True)),
                ('admepochtime', models.DateTimeField(blank=True, db_column='AdmEpochTime', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'PSVoltageMonitorSensor2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SCommsRxTm399',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rx_cfg_frames', models.IntegerField(blank=True, db_column='Rx_cfg_frames', null=True)),
                ('rx_cfg_detected', models.IntegerField(blank=True, db_column='Rx_cfg_detected', null=True)),
                ('rx_cfg_rssi', models.TextField(blank=True, db_column='Rx_cfg_rssi', null=True)),
                ('rx_avg_rssi', models.TextField(blank=True, db_column='Rx_avg_rssi', null=True)),
                ('rx_cfg_freqerr', models.TextField(blank=True, db_column='Rx_cfg_freqerr', null=True)),
                ('rx_cfg_carrier_lock', models.IntegerField(blank=True, db_column='Rx_cfg_carrier_lock', null=True)),
                ('rx_frame_lock', models.TextField(blank=True, db_column='Rx_frame_lock', null=True)),
                ('rx_cfg_symerr', models.TextField(blank=True, db_column='Rx_cfg_symerr', null=True)),
                ('rx_cfg_ebn0', models.TextField(blank=True, db_column='Rx_cfg_ebn0', null=True)),
                ('rx_sir_min', models.IntegerField(blank=True, db_column='Rx_sir_min', null=True)),
                ('rx_sir_max', models.IntegerField(blank=True, db_column='Rx_sir_max', null=True)),
                ('rx_bch_block_cnt', models.IntegerField(blank=True, db_column='Rx_bch_block_cnt', null=True)),
                ('rx_bch_err_cnt', models.IntegerField(blank=True, db_column='Rx_bch_err_cnt', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'S_comms_rx_tm_399',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SCommsTmProp398',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temp_psu', models.TextField(blank=True, db_column='Temp_psu', null=True)),
                ('temp_mcu', models.TextField(blank=True, db_column='Temp_mcu', null=True)),
                ('temp_fpga', models.TextField(blank=True, db_column='Temp_fpga', null=True)),
                ('temp_xcvr', models.TextField(blank=True, db_column='Temp_xcvr', null=True)),
                ('temp_lna', models.TextField(blank=True, db_column='Temp_lna', null=True)),
                ('temp_pa', models.TextField(blank=True, db_column='Temp_pa', null=True)),
                ('volt_vin', models.TextField(blank=True, db_column='Volt_vin', null=True)),
                ('volt_3v3', models.TextField(blank=True, db_column='Volt_3v3', null=True)),
                ('volt_1v8', models.TextField(blank=True, db_column='Volt_1v8', null=True)),
                ('volt_1v0', models.TextField(blank=True, db_column='Volt_1v0', null=True)),
                ('volt_pa', models.TextField(blank=True, db_column='Volt_pa', null=True)),
                ('cur_vin', models.TextField(blank=True, db_column='Cur_vin', null=True)),
                ('cur_3v3', models.TextField(blank=True, db_column='Cur_3v3', null=True)),
                ('cur_1v8', models.TextField(blank=True, db_column='Cur_1v8', null=True)),
                ('cur_1v0', models.TextField(blank=True, db_column='Cur_1v0', null=True)),
                ('cur_pa', models.TextField(blank=True, db_column='Cur_pa', null=True)),
                ('power_vin', models.TextField(blank=True, db_column='Power_vin', null=True)),
                ('power_3v3', models.TextField(blank=True, db_column='Power_3v3', null=True)),
                ('power_1v8', models.TextField(blank=True, db_column='Power_1v8', null=True)),
                ('power_1v0', models.TextField(blank=True, db_column='Power_1v0', null=True)),
                ('power_pa', models.TextField(blank=True, db_column='Power_pa', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'S_comms_tm_prop_398',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SCommsTxTm400',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tx_cfg_frames', models.TextField(blank=True, db_column='Tx_cfg_frames', null=True)),
                ('tx_cfg_pwr_fwd', models.TextField(blank=True, db_column='Tx_cfg_pwr_fwd', null=True)),
                ('tx_cfg_pwr_rfl', models.TextField(blank=True, db_column='Tx_cfg_pwr_rfl', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'S_comms_tx_tm_400',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Solarpanel1Temperaturesensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tempsensor', models.TextField(blank=True, db_column='TempSensor', null=True)),
                ('epochtime', models.DateTimeField(blank=True, db_column='EpochTime', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'SolarPanel1TemperatureSensor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Solarpanel2Temperaturesensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tempsensor', models.TextField(blank=True, db_column='TempSensor', null=True)),
                ('epochtime', models.DateTimeField(blank=True, db_column='EpochTime', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'SolarPanel2TemperatureSensor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Solarpanel3Temperaturesensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tempsensor', models.TextField(blank=True, db_column='TempSensor', null=True)),
                ('epochtime', models.DateTimeField(blank=True, db_column='EpochTime', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'SolarPanel3TemperatureSensor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Solarpanel4Temperaturesensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tempsensor', models.TextField(blank=True, db_column='TempSensor', null=True)),
                ('epochtime', models.DateTimeField(blank=True, db_column='EpochTime', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'SolarPanel4TemperatureSensor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Solarpanel5Temperaturesensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tempsensor', models.TextField(blank=True, db_column='TempSensor', null=True)),
                ('epochtime', models.DateTimeField(blank=True, db_column='EpochTime', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'SolarPanel5TemperatureSensor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SysMemStatus501',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iram_heap_mem_total', models.TextField(blank=True, db_column='Iram_heap_mem_total', null=True)),
                ('iram_heap_mem_used', models.TextField(blank=True, db_column='Iram_heap_mem_used', null=True)),
                ('eram_heap_mem_total', models.TextField(blank=True, db_column='Eram_heap_mem_total', null=True)),
                ('eram_heap_mem_used', models.TextField(blank=True, db_column='Eram_heap_mem_used', null=True)),
                ('eflash_qspi_mem_total', models.TextField(blank=True, db_column='Eflash_qspi_mem_total', null=True)),
                ('eflash_qspi_mem_used', models.TextField(blank=True, db_column='Eflash_qspi_mem_used', null=True)),
                ('eflash_fmc_mem_total', models.TextField(blank=True, db_column='Eflash_fmc_mem_total', null=True)),
                ('eflash_fmc_mem_used', models.TextField(blank=True, db_column='Eflash_fmc_mem_used', null=True)),
                ('eram_mem_total', models.TextField(blank=True, db_column='Eram_mem_total', null=True)),
                ('eram_mem_used', models.TextField(blank=True, db_column='Eram_mem_used', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'Sys_mem_status_501',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TctmEpsGetAlertFlag209',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eps_sts_var', models.TextField(blank=True, db_column='Eps_sts_var', null=True)),
                ('resp', models.TextField(blank=True, db_column='Resp', null=True)),
                ('mode', models.TextField(blank=True, db_column='Mode', null=True)),
                ('over_curr_ch1_5', models.TextField(blank=True, db_column='Over_curr_ch1_5', null=True)),
                ('over_curr_ch6_11', models.TextField(blank=True, db_column='Over_curr_ch6_11', null=True)),
                ('ovr_crnt_btry_chrg', models.TextField(blank=True, db_column='Ovr_crnt_btry_chrg', null=True)),
                ('ovr_crnt_btry_dischrg', models.TextField(blank=True, db_column='Ovr_crnt_btry_dischrg', null=True)),
                ('voltage_blw_10_7', models.TextField(blank=True, db_column='Voltage_blw_10_7', null=True)),
                ('ovr_crnt_channel_num', models.TextField(blank=True, db_column='Ovr_crnt_channel_num', null=True)),
                ('ovr_crbt_log_hours', models.TextField(blank=True, db_column='Ovr_crbt_log_hours', null=True)),
                ('ovr_crbt_log_minutes', models.TextField(blank=True, db_column='Ovr_crbt_log_minutes', null=True)),
                ('ovr_crbt_log_seconds', models.TextField(blank=True, db_column='Ovr_crbt_log_seconds', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'Tctm_eps_get_alert_flag_209',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TctmEpsGetConvBoardPar201',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eps_sts_var', models.TextField(blank=True, db_column='Eps_sts_var', null=True)),
                ('mppt_en_count', models.TextField(blank=True, db_column='Mppt_en_count', null=True)),
                ('op_conv_enb_count', models.TextField(blank=True, db_column='Op_conv_enb_count', null=True)),
                ('pv_volt_count', models.TextField(blank=True, db_column='Pv_volt_count', null=True)),
                ('pv_cur_count', models.TextField(blank=True, db_column='Pv_cur_count', null=True)),
                ('op_conv_volt_count', models.TextField(blank=True, db_column='Op_conv_volt_count', null=True)),
                ('response', models.TextField(blank=True, db_column='Response', null=True)),
                ('mppt_sts1', models.TextField(blank=True, db_column='Mppt_sts1', null=True)),
                ('mppt_sts2', models.TextField(blank=True, db_column='Mppt_sts2', null=True)),
                ('mppt_sts3', models.TextField(blank=True, db_column='Mppt_sts3', null=True)),
                ('mppt_sts4', models.TextField(blank=True, db_column='Mppt_sts4', null=True)),
                ('op_conv_enb_sts1', models.TextField(blank=True, db_column='Op_conv_enb_sts1', null=True)),
                ('op_conv_enb_sts2', models.TextField(blank=True, db_column='Op_conv_enb_sts2', null=True)),
                ('op_conv_enb_sts3', models.TextField(blank=True, db_column='Op_conv_enb_sts3', null=True)),
                ('op_conv_enb_sts4', models.TextField(blank=True, db_column='Op_conv_enb_sts4', null=True)),
                ('pv_volt1', models.TextField(blank=True, db_column='Pv_volt1', null=True)),
                ('pv_volt2', models.TextField(blank=True, db_column='Pv_volt2', null=True)),
                ('pv_volt3', models.TextField(blank=True, db_column='Pv_volt3', null=True)),
                ('pv_volt4', models.TextField(blank=True, db_column='Pv_volt4', null=True)),
                ('pv_volt5', models.TextField(blank=True, db_column='Pv_volt5', null=True)),
                ('pv_cur1', models.TextField(blank=True, db_column='Pv_cur1', null=True)),
                ('pv_cur2', models.TextField(blank=True, db_column='Pv_cur2', null=True)),
                ('pv_cur3', models.TextField(blank=True, db_column='Pv_cur3', null=True)),
                ('pv_cur4', models.TextField(blank=True, db_column='Pv_cur4', null=True)),
                ('pv_cur5', models.TextField(blank=True, db_column='Pv_cur5', null=True)),
                ('op_volt_conv1', models.TextField(blank=True, db_column='Op_volt_conv1', null=True)),
                ('op_volt_conv2', models.TextField(blank=True, db_column='Op_volt_conv2', null=True)),
                ('op_volt_conv3', models.TextField(blank=True, db_column='Op_volt_conv3', null=True)),
                ('op_volt_conv4', models.TextField(blank=True, db_column='Op_volt_conv4', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'Tctm_eps_get_conv_board_par_201',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TempSensInfo525',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instance_id', models.TextField(blank=True, db_column='Instance_id', null=True)),
                ('device_id', models.TextField(blank=True, db_column='Device_id', null=True)),
                ('manufacture_id', models.TextField(blank=True, db_column='Manufacture_id', null=True)),
                ('temperature', models.TextField(blank=True, db_column='Temperature', null=True)),
                ('high_temp_threshold', models.TextField(blank=True, db_column='High_temp_threshold', null=True)),
                ('low_temp_threshold', models.TextField(blank=True, db_column='Low_temp_threshold', null=True)),
                ('critical_temp_threshold', models.TextField(blank=True, db_column='Critical_temp_threshold', null=True)),
                ('adc_resolution', models.TextField(blank=True, db_column='Adc_resolution', null=True)),
                ('operating_mode', models.TextField(blank=True, db_column='Operating_mode', null=True)),
                ('polarity', models.TextField(blank=True, db_column='Polarity', null=True)),
                ('hysteresis', models.TextField(blank=True, db_column='Hysteresis', null=True)),
                ('window_lock', models.TextField(blank=True, db_column='Window_lock', null=True)),
                ('event_mode', models.TextField(blank=True, db_column='Event_mode', null=True)),
                ('timest', models.DateTimeField(blank=True, null=True)),
                ('synthetictime', models.DateTimeField(blank=True, db_column='SyntheticTime', null=True)),
            ],
            options={
                'db_table': 'Temp_sens_info_525',
                'managed': False,
            },
        ),
        migrations.AlterModelOptions(
            name='position',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='power',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='storage',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='velocity',
            options={'managed': True},
        ),
        migrations.RemoveField(
            model_name='velocity',
            name='timestamp',
        ),
        migrations.AddField(
            model_name='velocity',
            name='timestep',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='velocity',
            name='x',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='velocity',
            name='y',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='velocity',
            name='z',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterModelTable(
            name='velocity',
            table='Velocity',
        ),
    ]
